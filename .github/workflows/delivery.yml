---
  name: ci

  on:
    pull_request:
    push:
      branches:
        - master
        - main

  jobs:
    delivery:
      runs-on: ubuntu-latest
      steps:
        - name: Check out code
          uses: actions/checkout@main
        - name: Run Chef Delivery
          uses: actionshub/chef-delivery@main
          env:
            CHEF_LICENSE: accept-no-persist

    dokken:
      needs: [delivery]
      runs-on: ubuntu-latest
      strategy:
        matrix:
          os:
            - 'amazonlinux'
            - 'amazonlinux-2'
            - 'debian-9'
            - 'debian-10'
            - 'centos-6'
            - 'centos-7'
            - 'centos-8'
            - 'oraclelinux-6'
            - 'oraclelinux-7'
            # - 'oraclelinux-8'
            - 'fedora-latest'
            - 'ubuntu-1604'
            - 'ubuntu-1804'
            - 'opensuse-leap-15'

          suite:
            - 'install-for-chefspec'
            - 'install-no-user'
            - 'package'
            - 'service'
            - 'sup'
            - 'sup-toml-config'
            - 'config'
            - 'user-toml'
            - 'config-chef-13'
        fail-fast: false

      steps:
        - name: Check out code
          uses: actions/checkout@main
        - name: Install Chef
          uses: actionshub/chef-install@main
        - name: Dokken
          uses: actionshub/kitchen-dokken@main
          env:
            CHEF_LICENSE: accept-no-persist
            KITCHEN_LOCAL_YAML: kitchen.dokken.yml
          with:
            suite: ${{ matrix.suite }}
            os: ${{ matrix.os }}

    windows:
      needs: [delivery]
      runs-on: windows-2019
      strategy:
        matrix:
          os:
            - 'windows-2019'
          suite:
            - 'win_config'
            - 'win_package'
            - 'win_service'
            - 'win_sup'
            - 'win_user_toml'
            - 'win_sup_toml_config'
        fail-fast: false
      steps:
        - name: Check out code
          uses: actions/checkout@main
        - name: Install Chef Workstation
          run: . { iwr -useb https://omnitruck.chef.io/install.ps1 } | iex; install -channel stable -project chef-workstation
          shell: powershell
        - name: Add Chef Workstation to PATH
          run: |
            if ( $env:PATH -like "*chef-workstation*" ) {
              write-output 'Path already set, no action to perform'
            } else {
              write-output 'Adding c:\opscode\chef-workstation\bin to path.'
              echo "c:\opscode\chef-workstation\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            }
          shell: powershell
        - name: Chef Infra Client Run
          run: C:\opscode\chef-workstation\bin\chef-solo -c test/solo.rb -o "test::${{ matrix.suite }}"
          shell: powershell
          env:
            CHEF_LICENSE: accept-no-persist
        - name: Integration Testing
          run: C:\opscode\chef-workstation\bin\inspec exec test\integration\${{ matrix.suite }}\default_spec.rb
          shell: powershell
          env:
            CHEF_LICENSE: accept-no-persist
